<?xml version="1.0" encoding="UTF-8"?>

<config>

	<property name="logLevel" value="WARNING" />
	<property name="absoluteBeamWidth" value="-1" />
	<property name="relativeBeamWidth" value="1E-200" />
	<property name="wordInsertionProbability" value="0.7" />
	<property name="languageWeight" value="7" />

	<property name="frontend" value="epFrontEnd" />
	<property name="recognizer" value="recognizer" />
	<property name="showCreations" value="false" />
	<property name="outOfGrammarProbability" value="1E-10"/>
	<property name="phoneInsertionProbability" value="1E-55"/>
	<component name="recognizer" type="edu.cmu.sphinx.recognizer.Recognizer">
		<property name="decoder" value="decoder" />
	</component>

	<component name="decoder" type="edu.cmu.sphinx.decoder.Decoder">
		<property name="searchManager" value="simpleSearchManager" />
	</component>

	<component name="searchManager" type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
		<property name="logMath" value="logMath" />
		<property name="linguist" value="FlatLinguist" />
		<property name="pruner" value="trivialPruner" />
		<property name="scorer" value="threadedScorer" />
		<property name="activeListFactory" value="activeList" />
	</component>

	<component name="simpleSearchManager" type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
		<property name="linguist" value="FlatLinguist"/>
		<property name="pruner" value="trivialPruner"/>
		<property name="scorer" value="threadedScorer"/>
		<property name="activeListFactory" value="activeList"/>
	</component>

	<component name="wordPruningSearchManager" type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
		<property name="linguist" value="lexTreeLinguist"/>
		<property name="pruner" value="trivialPruner"/>
		<property name="scorer" value="threadedScorer"/>
		<property name="activeListManager" value="activeListManager"/>
		<property name="growSkipInterval" value="0"/>
		<property name="buildWordLattice" value="true"/>
		<property name="keepAllTokens" value="true"/>
		<property name="acousticLookaheadFrames" value="1.7"/>
		<property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
	</component>


	<component name="activeList" type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
		<property name="logMath" value="logMath" />
		<property name="absoluteBeamWidth" value="${absoluteBeamWidth}" />
		<property name="relativeBeamWidth" value="${relativeBeamWidth}" />
	</component>

	<component name="trivialPruner" type="edu.cmu.sphinx.decoder.pruner.SimplePruner" />

	<component name="threadedScorer" type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
		<property name="frontend" value="${frontend}" />
	</component>

	<component name="FlatLinguist" type="edu.cmu.sphinx.linguist.flat.FlatLinguist">
		<property name="grammar" value="grammar" />
		<property name="acousticModel" value="wsj" />
		<property name="wordInsertionProbability" value="${wordInsertionProbability}" />
		<property name="silenceInsertionProbability" value="${silenceInsertionProbability}"/>
		<property name="languageWeight" value="${languageWeight}"/>
		<property name="unitManager" value="unitManager"/>

		<property name="addOutOfGrammarBranch" value="true"/>
    		<property name="outOfGrammarProbability" value="1E-20"/>
    		<property name="phoneInsertionProbability" value="1E-10"/>
    		<property name="phoneLoopAcousticModel" value="wsj"/>
	</component>

	<component name="grammar" type="edu.cmu.sphinx.jsgf.JSGFGrammar">
		<property name="dictionary" value="dictionary" />
		<!--property name="logMath" value="logMath" /-->
		<property name="addSilenceWords" value="false" />
		<property name="grammarLocation" value="./data/gram" />
		<property name="grammarName" value="digits" />
		<property name="showGrammar" value="false" />
		<property name="optimizeGrammar" value="false" />
		<property name="addFillerWords" value="false" />
	</component>

	<component name="dictionary" type="edu.cmu.sphinx.linguist.dictionary.FullDictionary">
		<property name="dictionaryPath" value="./data/dict/digits.dict" />
		<property name="fillerPath" value="./data/models/acoustic/wsj/noisedict" />
		<property name="addSilEndingPronunciation" value="false" />
		<property name="wordReplacement" value="&lt;sil&gt;" />
		<property name="unitManager" value="unitManager" />
	</component>

	<component name="wsj" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
		<property name="loader" value="wsjLoader" />
		<property name="unitManager" value="unitManager" />
	</component>

	<component name="wsjLoader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
		<property name="logMath" value="logMath" />
		<property name="unitManager" value="unitManager" />
		<property name="location" value="./data/models/acoustic/wsj" />
	</component>

	<component name="unitManager" type="edu.cmu.sphinx.linguist.acoustic.UnitManager" />
	<!-- additions start-->
	<component name="WSJ" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
		<property name="loader" value="WSJLOADER" />
		<property name="unitManager" value="UNITMANAGER" />
	</component>

	<component name="WSJLOADER" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
		<property name="logMath" value="logMath" />
		<property name="unitManager" value="UNITMANAGER" />
		<property name="location" value="./data/models/acoustic/wsj" />
	</component>

	<component name="UNITMANAGER" type="edu.cmu.sphinx.linguist.acoustic.UnitManager" />

	<component name="tidigits"
      type="edu.cmu.sphinx.model.acoustic.TIDIGITS_8gau_13dCep_16k_40mel_130Hz_6800Hz.Model">
        <property name="loader" value="sphinx3Loader"/>
        <property name="unitManager" value="unitManager"/>
    </component>

    <component name="sphinx3Loader"
               type="edu.cmu.sphinx.model.acoustic.TIDIGITS_8gau_13dCep_16k_40mel_130Hz_6800Hz.ModelLoader">
        <property name="logMath" value="logMath"/>
        <property name="unitManager" value="UNITMANAGER"/>
    </component>
	<!-- additions end -->

	<component name="epFrontEnd" type="edu.cmu.sphinx.frontend.FrontEnd">
		<propertylist name="pipeline">
			<item>audioFileDataSource </item>
			<item>dataBlocker </item>
			<item>preemphasizer </item>
			<item>windower </item>
			<item>fft </item>
			<item>melFilterBank </item>
			<item>dct </item>
			<item>liveCMN </item>
			<item>featureExtraction </item>
			<item>microphone </item>
		</propertylist>
	</component>

	<component name="audioFileDataSource" type="edu.cmu.sphinx.frontend.util.AudioFileDataSource" />

	<component name="dataBlocker" type="edu.cmu.sphinx.frontend.DataBlocker" />

	<component name="speechClassifier" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier" />

	<component name="nonSpeechDataFilter" type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter" />

	<component name="speechMarker" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />

	<component name="preemphasizer" type="edu.cmu.sphinx.frontend.filter.Preemphasizer" />

	<component name="windower" type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower">
	</component>

	<component name="fft" type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform">
	</component>

	<component name="melFilterBank" type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
	</component>

	<component name="dct" type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform" />

	<component name="liveCMN" type="edu.cmu.sphinx.frontend.feature.LiveCMN" />

	<component name="featureExtraction" type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor" />

	<component name="logMath" type="edu.cmu.sphinx.util.LogMath">
		<property name="logBase" value="1.0001" />
		<property name="useAddTable" value="true" />
	</component>

	<component name="microphone" type="edu.cmu.sphinx.frontend.util.Microphone">
        <property name="msecPerRead" value="10"/>
        <property name="closeBetweenUtterances" value="false"/>
    </component>

	<component name="kinect" type="edu.cmu.sphinx.frontend.util.Kinect">
		<property name="msecPerRead" value="10"/>
		<property name="closeBetweenUtterances" value="false"/>
		<property name="bigEndian" value="false"/>
	</component>

</config>
