<!-- Load processing nodelets for the depth camera -->
<launch>

  <arg name="manager" />
  <arg name="points_xyz" default="true" />
  <arg name="rectify" default="true" />
  <arg name="publish_metric" default="true" />
  <arg name="publish_metric_rect" default="true" />

  <arg name="respawn" default="false" />
  <arg     if="$(arg respawn)" name="bond" value="" />
  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />

  <!-- Rectified raw image (internal use) -->
  <node if="$(arg rectify)" pkg="nodelet" type="nodelet" name="rectify_depth"
        args="load image_proc/rectify $(arg manager) $(arg bond)"
	respawn="$(arg respawn)">
    <remap from="image_mono"  to="image_raw" />
    <remap from="image_rect"  to="image_rect_raw" />

    <!-- Use nearest neighbor (0) interpolation so we don't streak across
	 depth boundaries -->
    <param name="interpolation" value="0" />
  </node>

  <!-- Rectified depth image -->
  <node if="$(arg publish_metric_rect)" pkg="nodelet" type="nodelet" name="metric_rect"
        args="load depth_image_proc/convert_metric $(arg manager) $(arg bond)"
	respawn="$(arg respawn)">
    <remap from="image_raw" to="image_rect_raw" />
    <remap from="image"     to="image_rect" />
  </node>
  
  <!-- Unrectified depth image -->
  <node if="$(arg publish_metric)" pkg="nodelet" type="nodelet" name="metric"
        args="load depth_image_proc/convert_metric $(arg manager) $(arg bond)"
	respawn="$(arg respawn)" />

  <!-- XYZ point cloud (optional, disable if publishing XYZRGB instead) -->
  <node if="$(arg points_xyz)"
	pkg="nodelet" type="nodelet" name="points"
        args="load depth_image_proc/point_cloud_xyz $(arg manager) $(arg bond)"
	respawn="$(arg respawn)">
    <remap from="image_rect" to="image_rect_raw"/>  <!-- Use raw image for efficiency -->
  </node>

</launch>
